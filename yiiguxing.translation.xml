<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="976" />
    <option name="newTranslationDialogY" value="243" />
    <histories>
      <item value="rue NormalProjectionNetwork.m" />
      <item value="umber of time steps each environment proceeds per iteration. The total number of time steps from all environments per iteration can be computed as: ``num_envs env_batch_size unroll_length`" />
      <item value="flush summary to disk every so many seconds" />
      <item value="number of update iterations" />
      <item value="Transform to apply to the std, on top of `activation`." />
      <item value="the standard deviation of the normal distribution" />
      <item value="If True, std will be generated depending on the current state; otherwise a global std will be generated regardless of the current state." />
      <item value="Whether or not to scale the output distribution to ensure that the output aciton fits within the `action_spec`. Note that this is different from `mean_transform` which merely squashes the mean to fit within the spec." />
      <item value="sync off policy trainer" />
      <item value="Async Off Policy Trainer" />
      <item value="This is in contrast to Sutskever et. al. and other frameworks which employ an update of the form" />
      <item value="The implementation of SGD with MomentumNesterov subtly differs from Sutskever et. al." />
      <item value="dampening for momentum" />
      <item value="enables Nesterov momentum" />
      <item value="coefficients used for computing running averages of gradient and its square (default: (0.9, 0.999))." />
      <item value="iterable of parameters to optimize or dicts defining parameter groups." />
      <item value="Method" />
      <item value="Implementation of Adam algorithm following Tensorflow's convention." />
      <item value="A closure that reevaluates the model and returns the loss. Optional for most optimizers." />
      <item value="not None, serve as a posit" />
      <item value="bool): If True, use `tensor_" />
      <item value="serve as a positive threshold" />
      <item value="If not None, serve as a positive threshold" />
      <item value="you can avoid assigning an optimizer to ``self._vars`` (because the module will be assigned with one) by doing:" />
      <item value="first project" />
      <item value="inverse frequency with which to perform the operation." />
      <item value="first observation of a skill" />
      <item value="Conditional operations" />
      <item value="Log metrics through logging." />
      <item value="Flattens and caches the tensor's batch_dims" />
      <item value="Exposes a pair of matched flatten and unflatten methods." />
      <item value="Facilitates flattening and unflattening batch dims of a tensor" />
      <item value="allows outside to stop enqueue and dequeue processes from waiting" />
      <item value="Current ending positions of data in the buffer without modulo." />
      <item value="Add a batch of items to the buffer (atomic)." />
      <item value="We anyways need to check has_space after the wait timed out." />
      <item value="Terminology: we use ``pos`` as in ``_current_pos`` to refer to the always increasing position of an element in the infinitly long buffer," />
      <item value="all blocking ``enqueue`` and ``dequeue`` calls that happen afterwards will be skipped, unless the operation already started." />
      <item value="Batched Ring Buffer." />
      <item value="Multiprocessing safe, optionally via: ``allow_multiprocess`` flag, blocking modes to ``enqueue`` and ``dequeue``, a stop event to terminate blocked processes, and putting buffer into shared memory." />
      <item value="A simple circular buffer supporting random sampling" />
      <item value="type of sampler used to get samples from marginal distribution," />
      <item value="shuffle" />
      <item value="diagonal normal distribution" />
      <item value="solftplus" />
      <item value="marginal" />
      <item value="experience" />
      <item value="product" />
      <item value="joint" />
      <item value="distribution" />
    </histories>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1633011260436" />
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
  </component>
</application>